name: Build Docker Images
description: Buuid and upload docker images
inputs:
  registry-alias:
    default: ${{ github.repository_owner }}
    required: false
    description: repository alias
  repository:
    default: ${{ github.event.repository.name }}
    required: false
    description: repository name
  extra-tags:
    required: false
    description: additional tags for image
  aws-region:
    default: "us-east-1"
    required: false
    description: aws region
  role-duration-seconds:
    default: "900"
    required: false
    description: aws role duration
  role-arn:
    default: ""
    required: false
    description: aws role arn to access ecr
  role-session-name:
    default: ""
    required: false
    description: aws role name to access resources
  role-skip-session-tagging:
    default: "false"
    required: false
    description: skip role session tagging
  docker-registry:
    default: ""
    required: false
    description: docker registry
  build-tag:
    default: latest
    required: true
    description: tag for built image

runs:
  using: composite
  steps:
    - name: Check current role
      id: get-role
      shaell: bash
      run: |
        aws sts get-caller-identity --query Arn --output text \
          | sed -r 's~^(.*):assumed-role/([^/]*)/.*~current_role=\1:role/\2~' \
          | tee -a $GITHUB_OUTPUT

    - name: Configure AWS Credentials
      if: steps.get-role.outputs.current_role != inputs.role-arn
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-arn }}
        role-session-name: ${{ inputs.role-session-name }}
        aws-region: ${{ inputs.aws-region }}
        role-skip-session-tagging: ${{ inputs.role-skip-session-tagging }}
        role-duration-seconds: ${{ inputs.role-duration-seconds }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true

    - name: tag images
      run: |
        docker tag ${{ inputs.registry-alias }}/${{ inputs.repository }}:${{ inputs.build-tag }} ${{ steps.login-ecr.outputs.registry }}/${{ inputs.registry-alias }}/${{ inputs.repository }}:${{ inputs.build-tag }}
      shell: bash

    - name: create repo if missing
      shell: bash
      run: |
        aws ecr describe-repositories --repository-names ${{ inputs.registry-alias }}/${{ inputs.repository }} || aws ecr create-repository --repository-name ${{ inputs.registry-alias }}/${{ inputs.repository }}

    - name: push to repo
      shell: bash
      run:
        docker push --all-tags "${{ steps.login-ecr.outputs.registry }}/${{ inputs.registry-alias }}/${{ inputs.repository }}"
